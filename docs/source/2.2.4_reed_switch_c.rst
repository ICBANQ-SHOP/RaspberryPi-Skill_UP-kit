2.2.4 Reed Switch Module
========================

**Introduction**
-------------------

这节课，我们将学习reed switch(as shown below)，它是一个通过所施加的磁场操作的电开关。

.. image:: media/2.2.4reed_switch.png
    :width: 300
    :align: center

**Components**
----------------

.. image:: media/2.2.4component.png
    :width: 700
    :align: center

**Principle**
----------------

reed switch是一种通过磁信号实现控制的线路开关元件。这里的“开关”指的是干簧管，
是一种结构简单、体积小、控制方便的接触式无源电子开关元件。reed switch的外壳
一般为密封玻璃管，其中装有两块铁弹性簧片电镀，并充入惰性气体。

.. image:: media/reedswitch1.png

通常情况下，玻璃管中由特殊材料制成的两个簧片是分开的。然而，当磁性物质接近玻璃管时。
玻璃管中的两个簧片在磁力线的作用下相互吸引并接触。结果，两个簧片将拉在一起，连接与
节点相连的电路。

.. image:: media/reedswitch2.png

外部磁力消失后，由于具有相同的磁性，两个簧片会相互分离，电路也就断开了，由此达到
控制电路的目的。

Visit: https://en.wikipedia.org/wiki/Reed_switch, for more information.

**Schematic Diagram**
-----------------------

============ ======== ======== ===
T-Board Name physical wiringPi BCM
GPIO17       Pin 11   0        17
GPIO27       Pin 13   2        27
GPIO22       Pin 15   3        22
============ ======== ======== ===

.. image:: media/reed_schematic.png
    :width: 400
    :align: center

.. image:: media/reed_schematic2.png
    :width: 400
    :align: center

**Experimental Procedures**
-------------------------------

**Step 1:** Build the circuit.

.. image:: media/2.2.4fritzing.png
    :width: 700
    :align: center

**Step 2:** Change directory.

.. code-block::

    cd /home/pi/raphael-kit/c/2.2.4/

**Step 3:** Compile.

.. code-block::

    gcc 2.2.4_ReedSwitch.c -lwiringPi

**Step 4:** Run.

.. code-block::

    sudo ./a.out

After code run,the LED will flash green. Place a magnet near the reed switch, 
the LED will change to red. Move away the magnet, the LED will turn green again.

**Code**

.. code-block:: c

    #include <wiringPi.h>
    #include <stdio.h>

    #define ReedPin		0
    #define Gpin		2
    #define Rpin		3

    void LED(char* color)
    {
        pinMode(Gpin, OUTPUT);
        pinMode(Rpin, OUTPUT);
        if (color == "RED")
        {
            digitalWrite(Rpin, HIGH);
            digitalWrite(Gpin, LOW);
        }
        else if (color == "GREEN")
        {
            digitalWrite(Rpin, LOW);
            digitalWrite(Gpin, HIGH);
        }
        else
            printf("LED Error");
    }

    int main(void)
    {
        if(wiringPiSetup() == -1){ //when initialize wiring failed,print messageto screen
            printf("setup wiringPi failed !");
            return 1; 
        }

        pinMode(ReedPin, INPUT);
        LED("GREEN");
        
        while(1){
            if(0 == digitalRead(ReedPin)){
                delay(10);
                if(0 == digitalRead(ReedPin)){
                    LED("RED");	
                    printf("Detected Magnetic Material!\n");	
                }
            }
            else if(1 == digitalRead(ReedPin)){
                delay(10);
                if(1 == digitalRead(ReedPin)){
                    while(!digitalRead(ReedPin));
                    LED("GREEN");
                }
            }
        }
        return 0;
    }

**Code Explanation**

.. code:: block

    #define ReedPin		0
    #define Gpin		2
    #define Rpin		3

Pin GPIO17, GPIO27 and GPIO22 of the T_Extension Board is corresponding to 
the GPIO0, GPIO2 and GPIO3 in wiringPi. Assign GPIO0, GPIO2 and GPIO3 to 
ReedPin, Gpin and Rpin. ReedPin, Gpin and Rpin represents GPIO0, GPIO2 
and GPIO3 in the code later. 

.. code:: block

    void LED(char* color)
    {
        pinMode(Gpin, OUTPUT);
        pinMode(Rpin, OUTPUT);
        if (color == "RED")
        {
            digitalWrite(Rpin, HIGH);
            digitalWrite(Gpin, LOW);
        }
        else if (color == "GREEN")
        {
            digitalWrite(Rpin, LOW);
            digitalWrite(Gpin, HIGH);
        }
        else
            printf("LED Error");
    }

When the parameter is red, Rpin writes high level, Gpin writes low level, 
and the red light is on. When the parameter is green, RpinWrite LOW level, 
Gpin write HIGH level, the green light is on. Other colors print "LED Error". 

.. code-block::

    while(1){
            if(0 == digitalRead(ReedPin)){
                delay(10);
                if(0 == digitalRead(ReedPin)){
                    LED("RED");	
                    printf("Detected Magnetic Material!\n");	
                }
            }
            else if(1 == digitalRead(ReedPin)){
                delay(10);
                if(1 == digitalRead(ReedPin)){
                    while(!digitalRead(ReedPin));
                    LED("GREEN");
                }
            }
        }

When ReedPin is low level, if delay 10ms is still low level, call the ``LED("RED")`` 
to light up red and print "Detected Magnetic Material!" When ReedPin is high level, 
if delay 10ms is still high level, call LED ("GREEN") to light up green.

 
**Phenomenon Picture**
------------------------

.. image:: media/2.2.4reed_switch.jpg
    :width: 500
    :align: center