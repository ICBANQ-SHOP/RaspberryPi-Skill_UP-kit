1.1.6 LED Dot Matrix
=====================

Introduction
--------------------

As the name suggests, an LED dot matrix is a matrix composed of LEDs.
The lighting up and dimming of the LEDs formulate different characters
and patterns.

Components
------------------

.. image:: media/list_dot.png

Principle
-----------

**LED Matrix**

The 64 LEDs are driven by 16 output pins of the IC. The maximum number 
of LEDs light up at the same time is actually eight. The LEDs are 
arranged as 8×8 set of rows and columns. So the MAX7219 activates each 
column for a very short period of time and at the same time it also 
drives each row. So by rapidly switching through the columns and rows 
the human eye will only notice a continuous light.

.. image:: media/1.1.6max72191.png
  :width: 700

**MAX7219**

These integrated circuits from Maxim are for driving either 64 individual 
LED’s, or up to 8 digits of 7-segment displays. The drivers implement a 
SPI compatible slave interface that can be controlled from the Arduino 
using only 3 of the digital output pins.

安装BCM2835库
---------------

Open a terminal, 我们在/home/pi目录下载安装文件。

.. code-block:: c

    cd /home/pi
    wget http://www.airspayce.com/mikem/bcm2835/bcm2835-1.69.tar.gz

解压安装包。

.. code-block:: c

    tar zxvf bcm2835-1.xx.tar.gz

通过以下命令安装BCM2835库。

.. code-block:: c

    cd bcm2835-1.69
    ./configure
    make
    sudo make check
    sudo make install
Schematic Diagram
-----------------------

============ ======== ======== ====
T-Board Name physical wiringPi BCM
SPIMOSI      Pin 19   12       MOSI
SPICE0       pin 24   10       CE0
SPISCLK      Pin 23   14       SCLK
============ ======== ======== ====

.. image:: media/schematic_dot.png

Experimental Procedures
----------------------------

**Step 1:** Build the circuit. 

.. image:: media/1.1.6fritzing.png

实验开始前首先要开启SPI，具体参考`SPI Configuration`。

**Step 2:** Go to the folder of the code.

.. code-block::

    cd /home/pi/raphael-kit/python/

**Step 3:** Compile the code.

.. code-block::

    make

**Step 4:**: Run the executable file.

.. code-block:: python

    sudo ./1.1.6_LedMatrix

运行代码后，LED Dot Matrix先从0依次显示到9，然后从A依次显示到Z。

**Code**

.. code-block:: c

   #include <bcm2835.h>
   #include <stdio.h>
   #include <string.h>
   #include <ctype.h>

   #define uchar unsigned char
   #define uint unsigned int

   #define Max7219_pinCS  RPI_GPIO_P1_24

   uchar disp1[36][8]={
   {0x3C,0x42,0x42,0x42,0x42,0x42,0x42,0x3C},//0
   {0x10,0x18,0x14,0x10,0x10,0x10,0x10,0x10},//1
   {0x7E,0x2,0x2,0x7E,0x40,0x40,0x40,0x7E},//2
   {0x3E,0x2,0x2,0x3E,0x2,0x2,0x3E,0x0},//3
   {0x8,0x18,0x28,0x48,0xFE,0x8,0x8,0x8},//4
   {0x3C,0x20,0x20,0x3C,0x4,0x4,0x3C,0x0},//5
   {0x3C,0x20,0x20,0x3C,0x24,0x24,0x3C,0x0},//6
   {0x3E,0x22,0x4,0x8,0x8,0x8,0x8,0x8},//7
   {0x0,0x3E,0x22,0x22,0x3E,0x22,0x22,0x3E},//8
   {0x3E,0x22,0x22,0x3E,0x2,0x2,0x2,0x3E},//9
   {0x8,0x14,0x22,0x3E,0x22,0x22,0x22,0x22},//A
   {0x3C,0x22,0x22,0x3E,0x22,0x22,0x3C,0x0},//B
   {0x3C,0x40,0x40,0x40,0x40,0x40,0x3C,0x0},//C
   {0x7C,0x42,0x42,0x42,0x42,0x42,0x7C,0x0},//D
   {0x7C,0x40,0x40,0x7C,0x40,0x40,0x40,0x7C},//E
   {0x7C,0x40,0x40,0x7C,0x40,0x40,0x40,0x40},//F
   {0x3C,0x40,0x40,0x40,0x40,0x44,0x44,0x3C},//G
   {0x44,0x44,0x44,0x7C,0x44,0x44,0x44,0x44},//H
   {0x7C,0x10,0x10,0x10,0x10,0x10,0x10,0x7C},//I
   {0x3C,0x8,0x8,0x8,0x8,0x8,0x48,0x30},//J
   {0x0,0x24,0x28,0x30,0x20,0x30,0x28,0x24},//K
   {0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x7C},//L
   {0x81,0xC3,0xA5,0x99,0x81,0x81,0x81,0x81},//M
   {0x0,0x42,0x62,0x52,0x4A,0x46,0x42,0x0},//N
   {0x3C,0x42,0x42,0x42,0x42,0x42,0x42,0x3C},//O
   {0x3C,0x22,0x22,0x22,0x3C,0x20,0x20,0x20},//P
   {0x1C,0x22,0x22,0x22,0x22,0x26,0x22,0x1D},//Q
   {0x3C,0x22,0x22,0x22,0x3C,0x24,0x22,0x21},//R
   {0x0,0x1E,0x20,0x20,0x3E,0x2,0x2,0x3C},//S
   {0x0,0x3E,0x8,0x8,0x8,0x8,0x8,0x8},//T
   {0x42,0x42,0x42,0x42,0x42,0x42,0x22,0x1C},//U
   {0x42,0x42,0x42,0x42,0x42,0x42,0x24,0x18},//V
   {0x0,0x49,0x49,0x49,0x49,0x2A,0x1C,0x0},//W
   {0x0,0x41,0x22,0x14,0x8,0x14,0x22,0x41},//X
   {0x41,0x22,0x14,0x8,0x8,0x8,0x8,0x8},//Y
   {0x0,0x7F,0x2,0x4,0x8,0x10,0x20,0x7F},//Z
   };

   void Delay_xms(uint x)
   {
   bcm2835_delay(x);
   }
   //------------------------

   void Write_Max7219_byte(uchar DATA)
   {
   bcm2835_gpio_write(Max7219_pinCS,LOW);
   bcm2835_spi_transfer(DATA);
   }

   void Write_Max7219(uchar address1,uchar dat1)
   {
   bcm2835_gpio_write(Max7219_pinCS,LOW);
   Write_Max7219_byte(address1);
   Write_Max7219_byte(dat1); 
   bcm2835_gpio_write(Max7219_pinCS,HIGH);
   }

   void Init_MAX7219()
   {
   Write_Max7219(0x09,0x00);
   Write_Max7219(0x0a,0x03);
   Write_Max7219(0x0b,0x07);
   Write_Max7219(0x0c,0x01);
   Write_Max7219(0x0f,0x00);
   }

   void Init_BCM2835()
   {
   bcm2835_spi_begin();
   bcm2835_spi_setBitOrder(BCM2835_SPI_BIT_ORDER_MSBFIRST);
   bcm2835_spi_setDataMode(BCM2835_SPI_MODE0);
   bcm2835_spi_setClockDivider(BCM2835_SPI_CLOCK_DIVIDER_256);
   bcm2835_gpio_fsel(Max7219_pinCS, BCM2835_GPIO_FSEL_OUTP);
   bcm2835_gpio_write(disp1[0][0],HIGH);
   }

   int main(void)
   {
   uchar i,j;

   if (!bcm2835_init())
   {
   printf("Unable to init bcm2835.\n");
   return 1;
   }
   Init_BCM2835();
   Delay_xms(50);
   Init_MAX7219();
   while(1)
   {
   for(j=0;j<38;j++)
   {
   for(i=1;i<9;i++)
   {
   Write_Max7219(i,disp1[j][i-1]);
   }
   Delay_xms(1000);
   }
   }
   // bcm2835_spi_end();
   // bcm2835_close();
   return 0;
   }

**Code Explanation**

.. code-block:: c

    #define Max7219_pinCS  24

定义了LED Dot Matrix信号脚（cs引脚）的pin口，命名方式为BOARD。

.. note::
    当你有多个设备需要进行spi通信时，我们只需要改cs引脚的pin口即可。

.. code-block:: c

    if (!bcm2835_init())
	{
		printf("Unable to init bcm2835.\n");
		return 1;
	}

检测bcm2835库是否安装成功，如果未安装成功则打印"Unable to init bcm2835"字符串信息。

.. code-block:: c

    Init_BCM2835();
	Delay_xms(50);
	Init_MAX7219();

初始化设备信息。

.. code-block:: c

    while(1)
    {
		for(j=0;j<38;j++)
        {
            for(i=1;i<9;i++)
            {
                Write_Max7219(i,disp1[j][i-1]);
            }
			Delay_xms(1000);
        }
    }

通过Write_Max7219()函数，可以在LED Dot Matrix上显示指定的字符，其中第一个参数输入显示在第几行，第二个参数输入一个8位二进制数或者一个16进制数，它可以表示这一行灯的亮灭情况（0表示熄灭，1表示点亮）。

.. note::
    例如将2和01101110作为第一个和第二个参数输入，即Write_Max7219(2,01101110)，LED Dot Matrix将做如下显示。

    .. image:: media/led_not.png
        :width: 400

Phenomenon Picture
-----------------------

.. image:: media/1.1.6led_dot_matrix.jpg
