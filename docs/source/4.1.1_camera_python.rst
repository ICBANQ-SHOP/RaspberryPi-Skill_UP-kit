4.1.1 Camera
~~~~~~~~~~~~~~~~

Introduction
-----------------

Let's try to assemble a simple camera with raspberry pi.

Components
----------------

.. image:: media/3.1.15camera_list.png
  :width: 800
  :align: center

**Schematic Diagram**
-----------------------

============ ======== ======== ===
T-Board Name physical wiringPi BCM
GPIO17       Pin 11   0        17
GPIO18       Pin 12   1        18
============ ======== ======== ===

.. image:: media/camera_schematic.png
   :width: 500
   :align: center

Experimental Procedures
------------------------------

**Step 1:** Build the circuit.

.. image:: media/3.1.15camera_fritzing.png
  :width: 800
  :align: center

在进行此项目之前，你应当已经配置好摄像头。具体教程参考 :ref:`Install the camera` .

**Step 2:** Get into the folder of the code.

.. code-block::

    cd /home/pi/raphael-kit/python/

**Step 3:** Run.

.. code-block::

    sudo python3 4.1.1_Camera.py

代码运行之后，按下按键时，LED灯会闪烁。LED灯闪烁之后，摄像头将拍下照片，照片会存储在
/home/pi目录下，并命名为my_photo.jpg.

**Code Explanation**

.. code-block:: python

    GPIO.add_event_detect(BtnPin, GPIO.FALLING, callback=takePhotos)

设置BtnPin的按键检测事件，当按键被按下时，执行中断函数takePhotos()。

.. code-block:: python

    def takePhotos(pin):
        global LedStatus, cameraStatus
        LedStatus = True
        cameraStatus = True

当中断函数takePhotos()被执行时，修改中断标志位。

.. code-block:: python

    if LedStatus:
        for i in range(5):
            GPIO.output(LedPin, GPIO.LOW)
            time.sleep(0.1)
            GPIO.output(LedPin, GPIO.HIGH)
            time.sleep(0.1)
            i += 1            
        LedStatus = False
    else:
        GPIO.output(LedPin, GPIO.HIGH)
    if cameraStatus:
        camera.capture('/home/pi/my_photo.jpg')
        print ('Take a photo!')
        cameraStatus = False      
    time.sleep(1)

当LedStatus为True时，让led灯在1秒内闪烁5次。当cameraStatus为True时，raspberry pi将拍一张照片，并存储为/home/pi目录下的my_photo.jpg文件。


**Phenomenon Picture**
------------------------

.. image:: media/4.1.1camera.jpg
   :align: center
