3.1.1 Photograph Module
==========================

Introduction
-----------------

Let's try to take a picture with raspberry pi.

Components
----------------

.. image:: media/photo1.png
  :width: 800

Principle
-------------

The camera in your hand is a 5 megapixel image sensor with high resolution and excellent performance, compatible with most SBCs or development boards with standard CSI (Camera Serial Interface).

Install the camera
----------------------

On the back of the camera module, there is a flat plastic connector (the same as on the Raspberry Pi). Gently pull out its black fixing piece, insert the FFC cable into the plastic connector (where the blue plastic surface fits the fixing piece), and finally gently push the fixing piece back to its original position.

.. image:: media/4.1.1install2.png
  :width: 500
  
.. warning::
    Do not install the camera while the power is on, it may damage your camera.

.. note::
    If the FFC is installed correctly, it will be straight to the plastic connector. Try to pull it gently, it will not be pulled out easily.

After the installation is complete, some configurations are required, please refer to: :ref:`Camera Module Installation`.

Experimental Procedures
------------------------------

**Step 1:** Get into the folder of the code.

.. code-block::

    cd /home/pi/raphael-kit/python/

**Step 2:** Run.

.. code-block::

    sudo python3 3.1.1_PhotographModule.py

After the code runs, The camera will take a picture.

Now you can see the photo named ``my_photo.jpg`` in the /home/pi directory. If you want to send photos to your PC, please refer to :ref:`Use Filezilla Software`.

**Code**

.. code-block:: python

    from picamera import PiCamera

    camera = PiCamera()
    
    def setup():
        camera.start_preview(alpha=200)
    
    def main():
        camera.capture('/home/pi/my_photo.jpg')
        while True:
            pass    
    
    def destroy():
        camera.stop_preview()
    
    if __name__ == '__main__':
        setup()
        try:
            main()
        except KeyboardInterrupt:
            destroy()

**Code Explanation**

.. code-block:: python

    from picamera import PiCamera

    camera = PiCamera()

Import the ``picamera`` library and instantiate the ``PiCamera`` class to use the camera module.

.. code-block:: python

    start_preview(**options)


Displays the preview overlay. This method starts a camera preview as an overlay on the Pi’s primary display (HDMI or composite). By default, the renderer will be opaque and fullscreen.

This means the default preview overrides whatever is currently visible on the display. More specifically, the preview does not rely on a graphical environment like X-Windows (it can run quite happily from a TTY console); it is simply an overlay on the Pi’s video output. To stop the preview and reveal the display again, call ``stop_preview()`` . The preview can be started and stopped multiple times during the lifetime of the ``PiCamera`` object.

.. note::

    Because the default preview typically obscures the screen, ensure you have a means of stopping a preview before starting one. If the preview obscures your interactive console you won’t be able to Alt+Tab back to it as the preview isn’t in a window. If you are in an interactive Python session, simply pressing Ctrl+D usually suffices to terminate the environment, including the camera and its associated preview.

.. note::
    you can alter the transparency level of the preview by entering an ``alpha`` value – from 0 to 255 – within the latter command’s brackets; e.g. camera.start_preview(alpha=200).

.. code-block:: python

    capture(output, format=None, use_video_port=False, resize=None, splitter_port=0, **options)

Capture an image from the camera, storing it in output.

.. note::
    Use camera.capture() function and for loop together to achieve continuous shooting. (Use the delay function to adjust the time interval for taking pictures.)

    .. code-block:: python

        for i in 5:
            camera.capture('/home/pi/my_photo%s.jpg' % i)